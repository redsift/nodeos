defaults:
  steps:
    - set_environment: &set_environment
        name: Set environment variables
        command: |-
          cat \>> $BASH_ENV \<< EOF
          set -a
          CONTAINER_NAME="quay.io/redsift/nodeos"
          BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          COMMIT_SHA1="${CIRCLE_SHA1:0:7}"
          VERSION="${CIRCLE_TAG:=$CIRCLE_BRANCH}-${CIRCLE_SHA1:0:7}"
          BRANCH=(${CIRCLE_BRANCH/-/ })
          NODE_VERSION="12.22.8"
          set +a
          EOF
    - log_in_to_quay: &log_in_to_quay
        name: Log in to quay.io
        command: |
          echo $QUAY_PASS | docker login --username $QUAY_USER --password-stdin quay.io
version: 2.1

jobs:
  container:
    environment:
      CIRCLE_REVERSE_DEPENDENCIES: buildos-meteor spm cipher oauthd-service
    docker:
      - image: cibuilds/docker:18.09.6
    steps:
      - checkout
      - setup_remote_docker
      - run: *set_environment
      - run: *log_in_to_quay
      - run:
          name: Build container
          command: |
            test -z $BASH && source ${BASH_ENV}
            suffix="beta"
            echo "Configuring FROM in Dockerfile with ${suffix}"
            if [[ "$BRANCH" == "release" ]]; then
              suffix="latest"
            fi

            sed "s/FROM quay\.io\/redsift\/baseos/&:${suffix}/" < Dockerfile > Dockerfile.versioned
            docker build -t ${CONTAINER_NAME}:${COMMIT_SHA1} -f Dockerfile.versioned \
              --build-arg nv="${NODE_VERSION}" \
              --build-arg BUILD_DATE=${BUILD_DATE} \
              --build-arg COMMIT_SHA1=${COMMIT_SHA1} \
              --build-arg VERSION=${VERSION} .
      - run:
          name: Test container
          command: |
            test -z $BASH && source ${BASH_ENV}
            echo "node -v" | docker run -i --entrypoint /bin/bash ${CONTAINER_NAME}:${COMMIT_SHA1}
            echo "npm -v" | docker run -i --entrypoint /bin/bash ${CONTAINER_NAME}:${COMMIT_SHA1}
      - run:
          name: Push Docker images to a registry
          command: |
            test -z $BASH && source ${BASH_ENV}
            imageName=${CONTAINER_NAME}:${COMMIT_SHA1}
            suffix="-beta"
            betasuffix="beta"
            if [[ "$BRANCH" == "release" ]]; then
              suffix=""
              betasuffix="latest"
            fi
            echo "Tagging as $CONTAINER_NAME:${NODE_VERSION}${suffix}"
            docker tag $imageName "${CONTAINER_NAME}:${NODE_VERSION}${suffix}"
            echo "Tagging as $CONTAINER_NAME:${betasuffix}"
            docker tag $imageName $CONTAINER_NAME:${betasuffix}
            docker push ${CONTAINER_NAME} > /dev/null
      - run: ./circle_ci_trigger_build

workflows:
  version: 2.1
  build:
    jobs:
      - container:
          filters:
            branches:
              only: [master, release-1]
          context: org-global
